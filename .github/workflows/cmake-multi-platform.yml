# Derived from https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  ensure-container:
    uses: ./.github/workflows/build-container.yml
    secrets:
      UBUNTU_PACKAGE_TOKEN: ${{ secrets.UBUNTU_PACKAGE_TOKEN }}

  build-ubuntu:
    needs: ensure-container
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/andreaswachowski/ubuntu-cpp:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.UBUNTU_PACKAGE_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        c_compiler: [gcc, clang]
        include:
          - c_compiler: gcc
            cpp_compiler: g++
          - c_compiler: clang
            cpp_compiler: clang++
    steps:
      - uses: actions/checkout@v4

      - name: Build project
        uses: ./.github/actions/build
        with:
          os: ubuntu
          source_dir: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
          build_dir: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/build
          c_compiler: ${{ matrix.c_compiler }}
          cpp_compiler: ${{ matrix.cpp_compiler }}
          build_type: ${{ matrix.build_type }}

  build-macos:
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        c_compiler: [clang]
        include:
          - c_compiler: clang
            cpp_compiler: clang++

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install spdlog googletest cli11 lcov

      - name: Add LLVM to PATH
        run: |
          echo "$(brew --prefix llvm@18)/bin" >> $GITHUB_PATH

      - name: Build and test project, measure test coverage
        uses: ./.github/actions/build
        with:
          os: macos
          c_compiler: ${{ matrix.c_compiler }}
          cpp_compiler: ${{ matrix.cpp_compiler }}
          build_type: ${{ matrix.build_type }}
