name: cpp-linter
on:
  pull_request:
    branches: ["main"]
    paths: ["**.c", "**.cpp", "**.h", "**CMakeLists.txt", "**.cmake"]
  push:
    branches: ["main"]
    paths: ["**.c", "**.cpp", "**.h", "**CMakeLists.txt", "**.cmake"]
jobs:
  cpp-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=clang++
          -DCMAKE_C_COMPILER=clang
          -DCMAKE_BUILD_TYPE=Debug
          -S ${{ github.workspace }}

      - uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          # https://github.com/cpp-linter/cpp-linter-action/blob/v2/docs/permissions.md#thread-comments
          # https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-fine-grained-personal-access-token
          GITHUB_TOKEN: ${{ secrets.CPP_LINTER_PAT }}
        with:
          database: ${{ steps.strings.outputs.build-output-dir }}
          style: "file" # Use .clang-format config file
          tidy-checks: "" # Use .clang-tidy config file
          # only 'update' a single comment in a pull request thread.
          thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
          version: 18
      - name: Fail fast?!
        if: steps.linter.outputs.checks-failed > 0
        run: exit 1
